
buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
        groovyVersion = '2.4.3'
    }
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/libs-snapshot-local" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        //classpath "io.spring.gradle:dependency-management-plugin:0.4.0.RELEASE"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'spring-boot'
apply plugin: 'docker'
//apply plugin: 'application'
//apply plugin: "eclipse"
//apply plugin: "io.spring.dependency-management"


ext {
    name = 'eureka'
    description = 'Eureka Server demo project' 
    version='1.1.0-SNAPSHOT'
    sourceEncoding='UTF-8'
    dockerRegistry = "docker-registry.anarchia.loc:5000"
}

docker {
}

task buildImage(type: Docker) {
    println "Configuring  buildImage"
    dockerfile "src/main/docker/Dockerfile"
    
    applicationName = project.ext.name
    tagVersion = project.ext.version
    //tag = "${project.group}/${applicationName}:${tagVersion}"
}

buildImage.doFirst {
   project.copy {
    from jar.archivePath
    into buildImage.stageDir
   } 
}

buildImage.doLast {
    exec {
       executable "docker"
       args "tag","-f", "${applicationName}:${tagVersion}", "${project.dockerRegistry}/${applicationName}:${tagVersion}"
     }

    exec {
       executable "docker"
       args "push","${project.dockerRegistry}/${applicationName}:${tagVersion}"
     }
}

repositories {
    jcenter()
    maven { url 'https://repo.spring.io/release/' }
    maven { url "http://repo.spring.io/libs-snapshot-local" }
    maven { url "http://repo.spring.io/libs-milestone-local" }
    maven { url "http://repo.spring.io/libs-release-local" }
}

dependencyManagement {
	imports { 
		mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.BUILD-SNAPSHOT" 
	}
}

dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-eureka-server'
    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile('org.springframework.cloud:spring-cloud-starter-bus-amqp')


    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile "junit:junit"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}
